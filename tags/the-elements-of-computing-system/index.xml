<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Elements of Computing System on でぶろぐ</title>
    <link>https://taisa-asiato.github.io/tags/the-elements-of-computing-system/</link>
    <description>Recent content in The Elements of Computing System on でぶろぐ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 11 Jan 2020 23:07:22 +0900</lastBuildDate><atom:link href="https://taisa-asiato.github.io/tags/the-elements-of-computing-system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>コンピュータシステムの理論と実装 10章</title>
      <link>https://taisa-asiato.github.io/post/compsystem10/</link>
      <pubDate>Sat, 11 Jan 2020 23:07:22 +0900</pubDate>
      
      <guid>https://taisa-asiato.github.io/post/compsystem10/</guid>
      <description>概要 コンピュータシステムの理論と実装の10章の課題を終えたので記事を書きます。
10章の目的(11章もですが)はJackコンパイラの作成です。 コンパイラは,
 コンピュータ・プログラミング言語の処理系（言語処理系）の一種で、 高水準言語によるソースコードから、機械語あるいは元のプログラムよりも 低い水準のコードに変換（コンパイル）する https://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9
 プログラムです。 コンパイラはコンパイルする際
 構文解析 コード生成  の大きく2つの作業を行なっています。 本書ではJackコンパイラが行う上記２つの作業の詳細を10章, 11章の2章に分けて学び, 課題としてそれぞれ構文解析器, コード生成器を実装します。それぞれ作成したものを合体させ Jackコンパイラの実装が完了します。
10章で作成する構文解析器は, 10章の終了時点では解析器単体で動作し .xmlファイルへ構文解析の結果を出力できるよう実装を行います。
詳細 構文解析機は下記２つの異なるモジュールから構成されます。
 トークナイザ パーサ  トークナイザ トークナイザは</description>
    </item>
    
  </channel>
</rss>
